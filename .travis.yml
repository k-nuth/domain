#
# Copyright (c) 2017-2018 Bitprim Inc.
#
# This file is part of Bitprim.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

branches:
  only:
  - master
  # - /^v\d+\.\d+\.\d+$/
  - dev
  - /^release-\d+\.\d+\.\d+$/
  - /^release_\d+\.\d+\.\d+$/
  - /^hotfix-\d+\.\d+\.\d+$/
  - /^hotfix_\d+\.\d+\.\d+$/
  - /^feature-ci-.+$/
  - /^feature_ci_.+$/
  - /^feature-travis-.+$/
  - /^feature_travis_.+$/

env:
   global:
     - CONAN_STABLE_BRANCH_PATTERN: "master$" #"release/*"

linux: &linux
   os: linux
   sudo: required
   language: python
   python: "3.6"
   services:
     - docker

osx: &osx
   os: osx
   language: generic

before_install:
  - |
    if [[ "${TRAVIS_COMMIT_MESSAGE}" = *"[skip travis]"* ]]; then
      echo "[skip travis] detected in commit message, exiting"
      travis_terminate 0
    fi

install:
  - cd ${TRAVIS_BUILD_DIR}

  - |
    if [[ "${CHECK_FORMATTING}" != "true" ]]; then
      chmod +x ci_utils/.travis/install.sh
      ./ci_utils/.travis/install.sh
    fi    

script:
  - git fetch --unshallow
  - git fetch origin master:master
  # - git tag
  # - git describe
  # - git describe origin
  # - git describe master
  # - python ci_utils/print_version.py

  # #TODO(fernando): Use lasote/conanclang50 for checking formating and other clang-tools related
  # - |
  #   if [[ "${CHECK_FORMATTING}" == "true" ]]; then
  #     cd ${TRAVIS_BUILD_DIR}
  #     chmod a+x .travis/check_format.sh
  #     /usr/bin/docker run --rm -ti -v ${TRAVIS_BUILD_DIR}:/home/conan/project \
  #                                  -v ${TRAVIS_BUILD_DIR}/.travis/check_format.sh:/tmp/check_format.sh lasote/conanclang40 \
  #                                  /bin/bash \
  #                                  -c /tmp/check_format.sh

  #   fi

  # - conan remote add bitprim https://api.bintray.com/conan/bitprim/bitprim
  # - conan info . --only None
  # - conan info . --only None -s compiler=gcc -s compiler.version=5 -s compiler.libcxx=libstdc++
  # - conan remote remove bitprim
  - |
    if [[ "${CHECK_FORMATTING}" != "true" ]]; then
      echo ${CONAN_STABLE_BRANCH_PATTERN}
      cd ${TRAVIS_BUILD_DIR}
      chmod +x ci_utils/.travis/run.sh
      ./ci_utils/.travis/run.sh
    fi

jobs:
  include:

# Wait for dependencies ----------------------------------------------
    - stage: wait for dependencies
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=lasote/conangcc8
           BITPRIM_CI_CURRENCY=BCH
      if: branch =~ /^(release|hotfix).+$/    #Just releases
      script:
        - |
          conan user
          conan remote add bitprim_temp https://api.bintray.com/conan/bitprim/bitprim
          echo "waiting for secp256k1/0.X@bitprim/staging ..."
          conan search secp256k1/0.X@bitprim/staging -r bitprim_temp > /dev/null
          while [ $? == 1 ]
          do
            printf "."
            sleep 10
            conan search secp256k1/0.X@bitprim/staging -r bitprim_temp > /dev/null
          done
          echo "secp256k1/0.X@bitprim/staging found"


# Static Checks ------------------------------------------------------

    - stage: static checks
      os: osx
      language: generic
      osx_image: xcode9.3
      # env: CONAN_APPLE_CLANG_VERSIONS=9.0 
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
      # install: skip
      install:
        - cd ${TRAVIS_BUILD_DIR}
        - pwd
        - ls -ltra
        - |
          # chmod +x ci_utils/.travis/install.sh
          # ./ci_utils/.travis/install.sh

          # set -e
          # set -x

          if [[ "$(uname -s)" == 'Darwin' ]]; then
              brew update >/dev/null || brew update >/dev/null
              brew outdated pyenv || brew upgrade pyenv
              brew install pyenv-virtualenv
              brew install cmake || true

              if which pyenv > /dev/null; then
                  eval "$(pyenv init -)"
              fi

              pyenv install 2.7.10
              pyenv virtualenv 2.7.10 conan
              pyenv rehash
              pyenv activate conan
          fi

        - pip install conan --upgrade
        - pip install conan_package_tools
        # - pip install cpuid --upgrade
        - conan user
        # pip uninstall cpuid
        - brew update >/dev/null
        - brew upgrade pcre || brew install pcre || exit 1
        - brew upgrade vera++ || brew install vera++ || exit 1
        - brew upgrade llvm --with-clang --with-clang-extra-tools || brew install llvm --with-clang --with-clang-extra-tools || exit 1
        - ls /usr/local/opt/llvm/bin | grep clang
      script:
        - git fetch --unshallow || true
        - git fetch origin master:master
        - |
          if which pyenv > /dev/null; then
              eval "$(pyenv init -)"
              eval "$(pyenv virtualenv-init -)"
          fi
        - pyenv activate conan
        - eval $(python ci_utils/set_envvars_and_files.py)
        - conan user
        - conan remote add bitprim_temp https://api.bintray.com/conan/bitprim/bitprim
        - cd ${TRAVIS_BUILD_DIR}
        - pwd
        - ls -ltra
        - mkdir build
        - cd build
        - conan install ..
        # - cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DENABLE_TESTS=OFF -DWITH_TESTS=OFF -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ${BOOST_OPTS}
        # - cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DENABLE_TESTS=OFF -DWITH_TESTS=OFF -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        # - cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON                 -DENABLE_TESTS=OFF -DWITH_TESTS=OFF -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=Release
        - cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DUSE_CONAN=ON  -DENABLE_TESTS=OFF -DWITH_TESTS=OFF -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=Release -DJUST_BITPRIM_SOURCES=ON -DWITH_KEOKEN=ON
        - export PATH=$PATH:/usr/local/opt/llvm/bin/
        - clang-tidy --version
        # - sudo find / -name "run-clang-tidy.py"
        # - /usr/local/Cellar/llvm/6.0.0/share/clang/run-clang-tidy.py -checks='*,-modernize-use-using,-hicpp-deprecated-headers,-modernize-deprecated-headers' -header-filter=${TRAVIS_BUILD_DIR}/include
        # - python ci_utils/run-clang-tidy.py -checks='*,-modernize-use-using,-hicpp-deprecated-headers,-modernize-deprecated-headers' -warnings-as-errors='*,-modernize-use-using,-hicpp-deprecated-headers,-modernize-deprecated-headers' -header-filter=${TRAVIS_BUILD_DIR}/include
        - python ../ci_utils/run-clang-tidy.py -checks='*,-android-*,-modernize-use-using,-hicpp-deprecated-headers,-modernize-deprecated-headers,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-owning-memory,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-hicpp-vararg,-hicpp-no-malloc,-fuchsia-default-arguments,-google-runtime-references,-cppcoreguidelines-no-malloc,-hicpp-no-malloc,-llvm-header-guard,-android-cloexec-fopen,-cppcoreguidelines-pro-type-union-access,-cppcoreguidelines-pro-type-const-cast,-hicpp-braces-around-statements,-hicpp-special-member-functions,-readability-braces-around-statements,-coreguidelines-special-member-function,-cppcoreguidelines-special-member-functions,-clang-diagnostic-static-inline-explicit-instantiation,-fuchsia-overloaded-operator,-cppcoreguidelines-pro-type-member-init,-hicpp-member-init' -warnings-as-errors='*' -header-filter=${TRAVIS_BUILD_DIR}/include/bitprim

          # # Find non-ASCII characters in headers
          # hpps=$(find include doc -name \*\.hpp)
          # cpps=$(find test example -name \*\.cpp)
          # pcregrep --color='auto' -n "[\x80-\xFF]" ${hpps} ${cpps}
          # if [[ $? -ne 1 ]]; then exit 1; fi
          # # F001: Source files should not use the '\r' (CR) character
          # # L001: No trailing whitespace at the end of lines
          # # L002: Don't use tab characters
          # find include -name \*\.hpp | vera++ --rule F001 --rule L001 --rule L002 --error


# # Static Checks ------------------------------------------------------
#     - stage: static checks
#       os: linux
#       sudo: required
#       language: python
#       python: "3.6"
#       services:
#         - docker
#       env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=lasote/conanclang60
#       # if: branch =~ /^(release|hotfix).+$/    #Just releases
#       if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
#       install: skip
#       script: echo "Running checks (1)"
#         # - cd ${TRAVIS_BUILD_DIR}
#         # - chmod a+x .travis/check_format.sh
#         # - /usr/bin/docker run --rm -ti -v ${TRAVIS_BUILD_DIR}:/home/conan/project \
#         #                             -v ${TRAVIS_BUILD_DIR}/.travis/check_format.sh:/tmp/check_format.sh lasote/conanclang60 \
#         #                             /bin/bash \
#         #                             -c /tmp/check_format.sh

# Builds ------------------------------------------------------
    # Linux, GCC, libstdc++ ------------------------------------------------------
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=lasote/conangcc8
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=true
      if: branch =~ /^(release|hotfix).+$/    #Just releases
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=lasote/conangcc8
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=Flase
      if: branch =~ /^(release|hotfix).+$/    #Just releases
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=lasote/conangcc8
           BITPRIM_CI_CURRENCY=BTC
      if: branch =~ /^(release|hotfix).+$/    #Just releases

    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=lasote/conangcc7 
           BITPRIM_RUN_TESTS=true
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=true
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=lasote/conangcc7 
           BITPRIM_RUN_TESTS=true
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=false
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=lasote/conangcc7 
           BITPRIM_RUN_TESTS=true
           BITPRIM_CI_CURRENCY=BTC
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master

    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=6 CONAN_DOCKER_IMAGE=lasote/conangcc6
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=true
      if: branch =~ /^(release|hotfix).+$/    #Just releases
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=6 CONAN_DOCKER_IMAGE=lasote/conangcc6
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=false
      if: branch =~ /^(release|hotfix).+$/    #Just releases
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=6 CONAN_DOCKER_IMAGE=lasote/conangcc6
           BITPRIM_CI_CURRENCY=BTC
      if: branch =~ /^(release|hotfix).+$/    #Just releases


    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=5 CONAN_DOCKER_IMAGE=lasote/conangcc5
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=true
      if: branch =~ /^(release|hotfix).+$/    #Just releases
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=5 CONAN_DOCKER_IMAGE=lasote/conangcc5
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=false
      if: branch =~ /^(release|hotfix).+$/    #Just releases
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=5 CONAN_DOCKER_IMAGE=lasote/conangcc5
           BITPRIM_CI_CURRENCY=BTC
      if: branch =~ /^(release|hotfix).+$/    #Just releases


    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.6"
    #   services:
    #     - docker
    #   env: CONAN_GCC_VERSIONS=4.9 CONAN_DOCKER_IMAGE=lasote/conangcc49
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases


    # Linux, Clang, libstdc++ ----------------------------------------------------
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=lasote/conanclang60
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=true
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=lasote/conanclang60
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=false
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.6"
      services:
        - docker
      env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=lasote/conanclang60
           BITPRIM_CI_CURRENCY=BTC
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master

    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.6"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=5.0 CONAN_DOCKER_IMAGE=lasote/conanclang50
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.6"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=4.0 CONAN_DOCKER_IMAGE=lasote/conanclang40
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.6"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=3.9 CONAN_DOCKER_IMAGE=lasote/conanclang39

    # macOS, apple-Clang, libc++ -------------------------------------------------
    - stage: build and upload binaries
      os: osx
      language: generic
      osx_image: xcode9.3
      env: CONAN_APPLE_CLANG_VERSIONS=9.1
           BITPRIM_RUN_TESTS=true
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=true
      if: branch =~ /^(release|hotfix).+$/    #Just releases
    - stage: build and upload binaries
      os: osx
      language: generic
      osx_image: xcode9.3
      env: CONAN_APPLE_CLANG_VERSIONS=9.1
           BITPRIM_RUN_TESTS=true
           BITPRIM_CI_CURRENCY=BCH
           BITPRIM_WITH_KEOKEN=false
      if: branch =~ /^(release|hotfix).+$/    #Just releases
    - stage: build and upload binaries
      os: osx
      language: generic
      osx_image: xcode9.3
      env: CONAN_APPLE_CLANG_VERSIONS=9.1
           BITPRIM_RUN_TESTS=true
           BITPRIM_CI_CURRENCY=BTC
      if: branch =~ /^(release|hotfix).+$/    #Just releases

    - stage: build and upload binaries
      os: osx
      language: generic
      osx_image: xcode9.3
      env: CONAN_APPLE_CLANG_VERSIONS=9.1
      if: branch =~ /^(feature|dev).*$/    #Just development

    # - stage: build and upload binaries
    #   os: osx
    #   language: generic
    #   osx_image: xcode9        
    #   env: CONAN_APPLE_CLANG_VERSIONS=9.0
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

    # - stage: build and upload binaries
    #   os: osx
    #   language: generic
    #   osx_image: xcode8.3         
    #   env: CONAN_APPLE_CLANG_VERSIONS=8.1
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

    # - stage: build and upload binaries
    #   os: osx
    #   language: generic
    #   osx_image: xcode7.3
    #   env: CONAN_APPLE_CLANG_VERSIONS=7.3
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

# Upload Aliases -----------------------------------------------------
    - stage: upload aliases
      os: linux
      sudo: required
      language: python
      python: "3.6"
      # install: skip
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
      script:
        - |
          cd ${TRAVIS_BUILD_DIR}
          echo $TRAVIS_REPO_SLUG
          git fetch --unshallow
          git fetch origin master:master
          REPO_NAME=$(echo $TRAVIS_REPO_SLUG| cut -d'/' -f 2)
          echo $REPO_NAME

        - eval $(python ci_utils/set_envvars_and_files.py)
        #TODO(fernando): configure the remote and user using environment variables
        - conan remote add bitprim_temp https://api.bintray.com/conan/bitprim/bitprim
        - conan user
        - conan user ${CONAN_LOGIN_USERNAME} -r bitprim_temp -p ${CONAN_PASSWORD}
        - conan user
        - echo "conan alias ${REPO_NAME}/0.X@bitprim/${BITPRIM_CONAN_CHANNEL} ${REPO_NAME}/${BITPRIM_CONAN_VERSION}@bitprim/${BITPRIM_CONAN_CHANNEL}"
        - conan alias "${REPO_NAME}/0.X@bitprim/${BITPRIM_CONAN_CHANNEL}" "${REPO_NAME}/${BITPRIM_CONAN_VERSION}@bitprim/${BITPRIM_CONAN_CHANNEL}"
        - echo "conan upload ${REPO_NAME}/0.X@bitprim/${BITPRIM_CONAN_CHANNEL} --all -r bitprim_temp"
        - conan upload "${REPO_NAME}/0.X@bitprim/${BITPRIM_CONAN_CHANNEL}" --all -r bitprim_temp        

# Push to repos ------------------------------------------------------
    - stage: push to repos
      install: skip
      script:
          - chmod +x .travis/push_other_repo.sh
          - ./.travis/push_other_repo.sh
      if: branch =~ /^(feature|dev).*$/    #Just development

# Dummy for master ------------------------------------------------------
    - stage: build and upload binaries
      install: 
        - echo "Stable packages are published in Release branches"
      script:
        - echo "Stable packages are published in Release branches"
      if: branch =~ /^master$/    #Just master, dummy


# # Integration Tests ------------------------------------------------------
#     - stage: integration tests
#       install: skip
#       script: echo "Running integration tests (Guille)"


    # - stage: deploy to staging
    #   install: skip
    #   script: skip
    # - stage: test staging
    #   install: skip
    #   script: 'curl http://sf-stages-staging.herokuapp.com'
    # - stage: deploy to production
    #   install: skip
    #   script: skip
    # - stage: test production
    #   install: skip
    #   script: 'curl http://sf-stages-production.herokuapp.com'

notifications:
  email: false
  webhooks:
    urls: https://webhooks.gitter.im/e/a19dd2b03bf676d2b622
    on_success: change
    on_failure: always
